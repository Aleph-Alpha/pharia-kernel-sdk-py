name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
 ARTIFACTORY_URL: "https://alephalpha.jfrog.io"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Gr1N/setup-poetry@v9
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - name: Lint
        run: poetry run ruff check .
      - name: Format
        run: poetry run ruff format --diff .
      - name: Check types
        run: poetry run mypy --install-types --non-interactive .

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: Gr1N/setup-poetry@v9
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - uses: ./.github/actions/jfrog
      - name: Set env variable to publish skill
        shell: bash
        run: echo "JFROG_PASSWORD=$JFROG_ACCESS_TOKEN" >> $GITHUB_ENV
      - name: Test
        run: poetry run pytest -m 'not kernel' tests

  integration-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      ARTIFACTORY_URL: https://alephalpha.jfrog.io
      AA_API_TOKEN: ${{ secrets.AA_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: Gr1N/setup-poetry@v9
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - uses: ./.github/actions/jfrog
      - name: Run Pharia Kernel
        run: sh -x ./scripts/run_kernel.sh $JFROG_ACCESS_TOKEN_SUBJECT $JFROG_ACCESS_TOKEN $AA_API_TOKEN
      - name: Run tests
        run: poetry run pytest -m 'kernel'
        env:
          PHARIA_KERNEL_ADDRESS: http://127.0.0.1:8081
          PHARIA_STUDIO_ADDRESS: https://pharia-studio.aleph-alpha.stackit.run
      - name: Check skill execution
        run: poetry run sh -x ./scripts/build_and_run_skill.sh $AA_API_TOKEN
      - name: Check skill execution of failing skill
        run: poetry run sh -x ./scripts/build_and_run_failing_skill.sh $AA_API_TOKEN
