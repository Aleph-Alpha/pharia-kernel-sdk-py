name: Release Please

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  ARTIFACTORY_URL: https://alephalpha.jfrog.io
  ARTIFACTORY_PYPI_REPOSITORY: "pharia-kernel-pypi"

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
      - if: ${{ steps.release.outputs.release_created }}
        name: Get Identity Token From GitHub
        run: |
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=$ARTIFACTORY_URL" | jq .value | tr -d '"')
          if [[ -z "$ID_TOKEN" ]]; then exit 1; fi
          echo "ID_TOKEN=$ID_TOKEN" >> $GITHUB_ENV
      - if: ${{ steps.release.outputs.release_created }}
        name: Get JFrog Access Token with GitHub Identity Token
        run: |
          JFROG_ACCESS_TOKEN=$(curl \
            -X POST \
            -H "Content-type: application/json" \
            $ARTIFACTORY_URL/access/api/v1/oidc/token \
            -d \
            "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"$ID_TOKEN\", \"provider_name\": \"github\"}" \
          | jq .access_token -r)
          if [[ -z "$JFROG_ACCESS_TOKEN" ]]; then exit 1; fi
          echo "::add-mask::$JFROG_ACCESS_TOKEN"
          echo "JFROG_ACCESS_TOKEN=$JFROG_ACCESS_TOKEN" >> $GITHUB_ENV
      - if: ${{ steps.release.outputs.release_created }}
        name: Get Subject from JFrog Access Token
        run: |
          JFROG_ACCESS_TOKEN_SUBJECT=$(echo $JFROG_ACCESS_TOKEN | awk -F '.' '{print $2 "===="}' | fold -w 4 | sed '$ d' | tr -d '\n' | base64 -d | jq '.sub' -r)
          if [[ -z "$JFROG_ACCESS_TOKEN_SUBJECT" ]]; then exit 1; fi
          echo "JFROG_ACCESS_TOKEN_SUBJECT=$JFROG_ACCESS_TOKEN_SUBJECT" >> $GITHUB_ENV
      - if: ${{ steps.release.outputs.release_created }}
        name: Checkout
        uses: actions/checkout@v4
      - if: ${{ steps.release.outputs.release_created }}
        name: Install uv
        uses: astral-sh/setup-uv@v5
      - if: ${{ steps.release.outputs.release_created }}
        name: Build and publish to Artifactory PyPI repository
        run: |
          uv build
          uv publish --publish-url https://alephalpha.jfrog.io/artifactory/api/pypi/pharia-kernel-pypi --username $JFROG_ACCESS_TOKEN_SUBJECT --password $JFROG_ACCESS_TOKEN